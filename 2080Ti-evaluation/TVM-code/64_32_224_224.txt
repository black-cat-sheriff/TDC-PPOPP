ConfigSpace (len=4248502272, space_map=
   0 tile_f: Split(policy=factors, product=32, num_outputs=4) len=56
   1 tile_y: Split(policy=factors, product=224, num_outputs=4) len=224
   2 tile_x: Split(policy=factors, product=224, num_outputs=4) len=224
   3 tile_rc: Split(policy=factors, product=64, num_outputs=3) len=28
   4 tile_ry: Split(policy=factors, product=3, num_outputs=3) len=3
   5 tile_rx: Split(policy=factors, product=3, num_outputs=3) len=3
   6 auto_unroll_max_step: OtherOption([0, 512, 1500]) len=3
   7 unroll_explicit: OtherOption([0, 1]) len=2
)
Finish loading 150 records

Best config:
[('tile_f', [-1, 4, 2, 2]), ('tile_y', [-1, 2, 4, 4]), ('tile_x', [-1, 1, 8, 2]), ('tile_rc', [-1, 4, 1]), ('tile_ry', [-1, 3, 1]), ('tile_rx', [-1, 1, 3]), ('auto_unroll_max_step', 0), ('unroll_explicit', 1)],None,2681763588
Finish loading 150 records
Dump


******6*******

extern "C" __global__ void default_function_kernel0(float* __restrict__ data, float* __restrict__ kernel, float* __restrict__ compute) {
  float compute_local[128];
  __shared__ float pad_temp_shared[2448];
  __shared__ float kernel_shared[576];
  float pad_temp_shared_local[24];
  float kernel_shared_local[24];
  for (int ff_c_init = 0; ff_c_init < 2; ++ff_c_init) {
    for (int yy_c_init = 0; yy_c_init < 4; ++yy_c_init) {
      for (int xx_c_init = 0; xx_c_init < 2; ++xx_c_init) {
        compute_local[((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 32))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 64))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 96))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 16))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 48))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 80))] = 0.000000e+00f;
        compute_local[(((((ff_c_init * 8) + (yy_c_init * 2)) + xx_c_init) + 112))] = 0.000000e+00f;
      }
    }
  }
  for (int rc_outer = 0; rc_outer < 16; ++rc_outer) {
    __syncthreads();
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner < 39; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) {
      if (((((int)threadIdx.z) * 2) + (((((int)threadIdx.y) * 17) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) / 34)) < 4) {
        if ((((((int)threadIdx.z) * 68) + (((int)threadIdx.y) * 17)) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) < 136) {
          if (((((((int)threadIdx.z) * 1224) + (((int)threadIdx.y) * 306)) + (((int)threadIdx.x) * 39)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 2448) {
            if ((((((int)threadIdx.y) * 306) + (((int)threadIdx.x) * 39)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 1224) {
              if (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) < 306) {
                pad_temp_shared[(((((((int)threadIdx.z) * 1224) + (((int)threadIdx.y) * 306)) + (((int)threadIdx.x) * 39)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner))] = (((((1 <= ((((int)blockIdx.y) * 32) + (((((int)threadIdx.y) * 17) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) % 34))) && (((((int)blockIdx.y) * 32) + (((((int)threadIdx.y) * 17) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) % 34)) < 225)) && (1 <= ((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 18)))) && (((((int)blockIdx.x) * 16) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 18)) < 225)) ? data[(((((((((rc_outer * 200704) + (((int)threadIdx.z) * 100352)) + ((((((int)threadIdx.y) * 17) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) / 34) * 50176)) + (((int)blockIdx.y) * 7168)) + ((((((int)threadIdx.y) * 17) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) / 18)) % 34) * 224)) + (((int)blockIdx.x) * 16)) + (((((int)threadIdx.x) * 39) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner) % 18)) - 225))] : 0.000000e+00f);
              }
            }
          }
        }
      }
    }
    for (int ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 = 0; ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1 < 9; ++ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1) {
      kernel_shared[(((((((int)threadIdx.z) * 288) + (((int)threadIdx.y) * 72)) + (((int)threadIdx.x) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))] = kernel[((((((((((int)blockIdx.z) * 9216) + (((int)threadIdx.z) * 4608)) + (((int)threadIdx.y) * 1152)) + ((((int)threadIdx.x) >> 2) * 576)) + (rc_outer * 36)) + ((((int)threadIdx.x) & 3) * 9)) + ax0_ax1_fused_ax2_fused_ax3_fused_inner_inner_inner1))];
    }
    __syncthreads();
    for (int rc_inner_outer = 0; rc_inner_outer < 4; ++rc_inner_outer) {
      for (int rx_inner_outer = 0; rx_inner_outer < 3; ++rx_inner_outer) {
        for (int ax2 = 0; ax2 < 6; ++ax2) {
          for (int ax3 = 0; ax3 < 2; ++ax3) {
            pad_temp_shared_local[(((ax2 * 2) + ax3))] = pad_temp_shared[(((((((rc_inner_outer * 612) + (((int)threadIdx.y) * 72)) + (ax2 * 18)) + (((int)threadIdx.x) * 2)) + ax3) + rx_inner_outer))];
            pad_temp_shared_local[((((ax2 * 2) + ax3) + 12))] = pad_temp_shared[((((((((rc_inner_outer * 612) + (((int)threadIdx.y) * 72)) + (ax2 * 18)) + (((int)threadIdx.x) * 2)) + ax3) + rx_inner_outer) + 288))];
          }
        }
        for (int ax0 = 0; ax0 < 2; ++ax0) {
          for (int ax21 = 0; ax21 < 3; ++ax21) {
            kernel_shared_local[(((ax0 * 3) + ax21))] = kernel_shared[((((((((int)threadIdx.z) * 72) + (ax0 * 36)) + (rc_inner_outer * 9)) + (ax21 * 3)) + rx_inner_outer))];
            kernel_shared_local[((((ax0 * 3) + ax21) + 6))] = kernel_shared[(((((((((int)threadIdx.z) * 72) + (ax0 * 36)) + (rc_inner_outer * 9)) + (ax21 * 3)) + rx_inner_outer) + 144))];
            kernel_shared_local[((((ax0 * 3) + ax21) + 12))] = kernel_shared[(((((((((int)threadIdx.z) * 72) + (ax0 * 36)) + (rc_inner_outer * 9)) + (ax21 * 3)) + rx_inner_outer) + 288))];
            kernel_shared_local[((((ax0 * 3) + ax21) + 18))] = kernel_shared[(((((((((int)threadIdx.z) * 72) + (ax0 * 36)) + (rc_inner_outer * 9)) + (ax21 * 3)) + rx_inner_outer) + 432))];
          }
        }
        for (int ry_inner_inner = 0; ry_inner_inner < 3; ++ry_inner_inner) {
          for (int ff_c = 0; ff_c < 2; ++ff_c) {
            for (int yy_c = 0; yy_c < 4; ++yy_c) {
              for (int xx_c = 0; xx_c < 2; ++xx_c) {
                compute_local[((((ff_c * 8) + (yy_c * 2)) + xx_c))] = (compute_local[((((ff_c * 8) + (yy_c * 2)) + xx_c))] + (pad_temp_shared_local[((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c))] * kernel_shared_local[(((ff_c * 3) + ry_inner_inner))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 32))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 32))] + (pad_temp_shared_local[((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 6))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 64))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 64))] + (pad_temp_shared_local[((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 12))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 96))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 96))] + (pad_temp_shared_local[((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 18))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 16))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 16))] + (pad_temp_shared_local[(((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c) + 12))] * kernel_shared_local[(((ff_c * 3) + ry_inner_inner))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 48))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 48))] + (pad_temp_shared_local[(((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c) + 12))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 6))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 80))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 80))] + (pad_temp_shared_local[(((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c) + 12))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 12))]));
                compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 112))] = (compute_local[(((((ff_c * 8) + (yy_c * 2)) + xx_c) + 112))] + (pad_temp_shared_local[(((((yy_c * 2) + (ry_inner_inner * 2)) + xx_c) + 12))] * kernel_shared_local[((((ff_c * 3) + ry_inner_inner) + 18))]));
              }
            }
          }
        }
      }
    }
  }
  for (int ff_inner_inner_inner = 0; ff_inner_inner_inner < 2; ++ff_inner_inner_inner) {
    for (int yy_inner_inner_inner = 0; yy_inner_inner_inner < 4; ++yy_inner_inner_inner) {
      for (int xx_inner_inner_inner = 0; xx_inner_inner_inner < 2; ++xx_inner_inner_inner) {
        compute[((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner))] = compute_local[((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 200704))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 32))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 401408))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 64))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 602112))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 96))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 3584))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 16))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 204288))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 48))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 404992))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 80))];
        compute[(((((((((((((int)blockIdx.z) * 802816) + (((int)threadIdx.z) * 100352)) + (ff_inner_inner_inner * 50176)) + (((int)blockIdx.y) * 7168)) + (((int)threadIdx.y) * 896)) + (yy_inner_inner_inner * 224)) + (((int)blockIdx.x) * 16)) + (((int)threadIdx.x) * 2)) + xx_inner_inner_inner) + 605696))] = compute_local[(((((ff_inner_inner_inner * 8) + (yy_inner_inner_inner * 2)) + xx_inner_inner_inner) + 112))];
      }
    }
  }
}

/home/lizhi/tvm-python/tvm/python/tvm/target/target.py:454: UserWarning: tvm.target.create() is being deprecated. Please use tvm.target.Target() instead
  warnings.warn("tvm.target.create() is being deprecated. Please use tvm.target.Target() instead")


******6*******

Time cost of this operator: 0.000543
cnm
[src/runtime/cuda/cuda_module.cc] 
 grid=(14,7,2),  block=(8,4,2)
[src/runtime/cuda/cuda_module.cc] 
 grid=(14,7,2),  block=(8,4,2)
[src/runtime/cuda/cuda_module.cc] 
 grid=(14,7,2),  block=(8,4,2)
